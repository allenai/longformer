###### DOCKERFILE #########
# with versions
# Ubuntu 18.04
# CUDA 10.2
# LLVM 8
# Python 3.6
# Pytorch 1.10.2
# Transformers 4.16.0
# TVM 0.8.0
##########################

FROM nvidia/cuda:10.2-cudnn7-devel-ubuntu18.04

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update --fix-missing

# ubuntu_install_core.sh
RUN apt-get update && apt-get install -y --no-install-recommends \
        git make google-mock libgtest-dev cmake wget unzip libtinfo-dev libz-dev \
        libcurl4-openssl-dev libssl-dev libopenblas-dev g++ sudo \
        apt-transport-https graphviz pkg-config curl
WORKDIR /usr/src/gtest 
RUN cmake CMakeLists.txt 
RUN make 
RUN cp libgtest.a /usr/lib
RUN cp libgtest_main.a /usr/lib
WORKDIR /usr/src/gmock
RUN cmake CMakeLists.txt 
RUN make 
RUN cp libgmock.a /usr/lib
RUN cp libgmock_main.a /usr/lib
WORKDIR /

# LLVM
RUN echo deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-8 main \
     >> /etc/apt/sources.list.d/llvm.list && \
     wget -O - http://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add - && \
     apt-get update && apt-get install -y --force-yes llvm-8

# python
RUN apt update
RUN apt-get install -y software-properties-common
RUN apt-get install -y python3-dev python3-setuptools

WORKDIR /tmp 
RUN wget -q https://bootstrap.pypa.io/get-pip.py && python3 get-pip.py
WORKDIR /

RUN pip3 install numpy pytest cython decorator scipy
RUN pip3 install torch==1.10.2+cu102 torchvision==0.11.3+cu102 torchaudio===0.10.2+cu102 -f https://download.pytorch.org/whl/cu102/torch_stable.html
RUN pip3 install ipython ipdb tensorboardx tensorboard fairseq==v0.9.0
RUN pip3 install --ignore-installed transformers==4.16.0

# Build TVM
RUN git clone https://github.com/apache/tvm /usr/tvm --recursive
WORKDIR /usr/tvm
RUN git checkout 7b3a22e465dd6aca4729504a19beb4bc23312755
RUN echo set\(USE_LLVM llvm-config-8\) >> config.cmake
RUN echo set\(USE_CUDA ON\) >> config.cmake
RUN echo set\(USE_CUDNN ON\) >> config.cmake
RUN echo set\(USE_BLAS openblas\) >> config.cmake
RUN echo set\(USE_MKL OFF\) >> /usr/tvm/config.cmake
RUN echo set\(USE_MKL_PATH OFF\) >> /usr/tvm/config.cmake
RUN mkdir -p build
WORKDIR /usr/tvm/build
RUN cmake ..
RUN make -j10
WORKDIR /

# Environment variables
ENV PYTHONPATH=/usr/tvm/python:/usr/tvm/topi/python:/usr/tvm/nnvm/python/:/usr/tvm/vta/python:${PYTHONPATH}
ENV PATH=/usr/local/nvidia/bin:${PATH}
ENV PATH=/usr/local/cuda/bin:${PATH}
ENV LD_LIBRARY_PATH=/usr/local/cuda/lib64:/usr/local/nvidia/lib64:${LD_LIBRARY_PATH}